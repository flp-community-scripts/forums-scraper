"""flp
Title: Legato scripts / Legato for each key
Author: Pierre Sosa
Category: Archive
Version: Unknown
License: Unknown

Description: 
This script provides two legato functionalities that work differently from the
built-in legato tool in FL Studio. There is no graphical user interface (GUI)
for these scripts.

1) Legato for selected notes: This script considers only the timing of the
selected notes when applying legato.

2) Legato for each key: This script treats notes in each key (e.g., C5)
separately when applying legato.

The script was inspired by D3Mens and is open to suggestions for improvements or
different behaviors.

Thread Link: https://forum.image-line.com/viewtopic.php?t=307988
"""
import flpianoroll as flp
import math

if flp.score.noteCount == 0: 
	flp.Utils.ShowMessage("There are no notes!")

beat = flp.score.PPQ  # PPQ equals how many ticks there are in a beat
bar = beat * 4

score_length = flp.score.length

keys = []

for n in range(flp.score.noteCount):
	if keys.count(flp.score.getNote(n).number) == 0:
		keys.append(flp.score.getNote(n).number)

notes_indexes_for_each_key = [[] for k in keys]
notes_times_for_each_key = [[] for k in keys]

for key in keys:
	for n in range(flp.score.noteCount):
		if flp.score.getNote(n).number == key:
			notes_indexes_for_each_key[keys.index(key)].append(n)
			if notes_times_for_each_key[keys.index(key)].count(flp.score.getNote(n).time) == 0:
				notes_times_for_each_key[keys.index(key)].append(flp.score.getNote(n).time)

for k in range(len(keys)):
	notes_times_for_each_key[k].sort()
	for i in notes_indexes_for_each_key[k]:
		t = notes_times_for_each_key[k].index(flp.score.getNote(i).time)
		if flp.score.getNote(i).time != max(notes_times_for_each_key[k]):
			flp.score.getNote(i).length = notes_times_for_each_key[k][t+1] - notes_times_for_each_key[k][t]
		else: flp.score.getNote(i).length = math.ceil(score_length / bar) * bar - notes_times_for_each_key[k][t]		






