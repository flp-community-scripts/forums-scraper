"""flp
Title: microtonegen1.0
Author: PaulTron
Category: Archive
Version: 1.3
License: Unknown

Description: 
This script generates equal tone scales. It allows you to specify the starting
note, starting octave, note length, and spacing. The default starting note is
'C', starting octave is 4, and the default number of tones to divide the octave
into is 12.

Changelog:
2021-03-XX (1.3)
- Added starting time, octave, note length, spacing

2021-02-XX (1.2)
- Fixed starting note names

2021-01-XX (1.1)
- Added starting note

Thread Link: https://forum.image-line.com/viewtopic.php?t=322379
"""
from flpianoroll import *

n_names = ['C','D','E','F','G','A','B']

def get_pitches(num_vals):
    start = 0
    stop = 1200
    delta = (stop-start)/(num_vals)
    return [int(start + i * delta) for i in range(num_vals+1)]

def add_notes(start, scale: list):

    vals = [(round(float(x)/100.0),-round((round(float(x)/100.0)*100-x)/10.0)) for x in scale]

    for n in range(len(vals)-1):
        _note = Note()
        _note.number = start + vals[n][0]
        _note.time = n * score.PPQ
        _note.length = score.PPQ
        _note.pitchofs = vals[n][1]
        score.addNote(_note)
        
def createDialog():
  form = ScriptDialog('Add Scale', 'Adds a quarter note scale in a specified number of tones.')
  form.AddInputText('Starting Note', 'C')
  form.AddInputKnobInt('Divisions', int(12), int(0), int(48))
  return form

def apply(form):
    notenr = 36 + n_names.index(form.GetInputValue('Starting Note'))
    divs = form.GetInputValue('Divisions')

    add_notes(notenr, get_pitches(divs))
